echo This script generates 20*1000 variants of the btb_breakout.wasm and btb_leakage.wasm files.
echo Downloading the stacking tool...
# Download the stacking tool
VERSION="0.7.0"
if [[ ! -f stacking.${VERSION}.gz ]]; then
    if [[ "$(uname -s)" == "Darwin" ]]; then
        exit 1
    else
        curl --fail --location --silent https://github.com/Jacarte/tawasco/releases/download/${VERSION}/stacking-all-x86_64-linux-${VERSION}.gz --output stacking.${VERSION}.gz || exit 1
    fi
    7z x stacking.${VERSION}.gz || exit 1
    chmod +x stacking
fi

echo "Wiping pool..."
rm -rf breakout_pool
rm -rf leakage_pool

echo "Generating variants..."
RANDOM=1

mkdir -p breakout_pool
mkdir -p leakage_pool

cp btb_leakage.wasm.bck leakage_pool/btb_leakage.wasm
cp btb_breakout.wasm.bck breakout_pool/btb_breakout.wasm
cp btb_leakage.wasm.bck btb_leakage.wasm
cp btb_breakout.wasm.bck btb_breakout.wasm
# We generate 1000 with 20 different seeds
# We have a total of 20*1000 variants :)
# Generate the breakout variants
for seed in $(seq 1 20)
do
    S=$RANDOM

    RUST_LOG=wasm_mutate=debug ./stacking btb_breakout.wasm breakout_pool/breakout.stack.$S.wasm --seed $S -c 1000 --save 1 --save-compiling 2> breakout_pool/logs.$S.break.txt

    RUST_LOG=wasm_mutate=debug ./stacking btb_leakage.wasm leakage_pool/leakage.stack.$S.wasm --seed $S -c 1000 --save 1 --save-compiling 2> breakout_pool/logs.$S.break.txt

done

echo "Done!"
# Generate the leakage variants
