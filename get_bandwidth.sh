echo "Each variant runs with a timeout of 5mins. That is more than needed for the original attack to run. Change it if needed."

rm -rf out_breakout
mkdir -p out_breakout

rm -rf out_leakage
mkdir -p out_leakage

echo 0 | sudo tee /proc/sys/kernel/randomize_va_space


rm -rf results_breakout
mkdir -p results_breakout
I=0
TIMEOUT=300

# while true execute make
while true
do 
    echo "" > results_breakout/results_breakout.${I}.txt

    make clean
    make copycode.so

    echo "================================== NEW VARIANT BREAKOUT ================================== "
    echo "================================== NEW VARIANT ================================== " >> results_breakout/results_breakout.${I}.txt

    # Run three times just in case
    make stock/btb_breakout.so >> results_breakout/results_breakout.${I}.txt || break # will break if the pool folder is empty
    { timeout --foreground $TIMEOUT time ./gdb.sh breakout stock/ >> results_breakout/results_breakout.${I}.txt;} 2>> results_breakout/results_breakout.${I}.txt
    # { timeout --foreground 180 time ./gdb.sh breakout stock/ >> results_breakout/results_breakout.${I}.txt;} 2>> results_breakout/results_breakout.${I}.txt
    # { timeout --foreground 180 time ./gdb.sh breakout stock/ >> results_breakout/results_breakout.${I}.txt;} 2>> results_breakout/results_breakout.${I}.txt
    
    cp stock/btb_breakout.so out_breakout/$(sha256sum btb_breakout.wasm | cut -d " " -f 1).${I}.so
    cp btb_breakout.wasm out_leakage/btb_breakout.${I}.wasm

    echo "================================== DONE ================================== "
    echo "================================== DONE ================================== " >> results_breakout/results_breakout.${I}.txt
    # break
    I=$((I+1))
    # exit 1
done

curl --data parse_mode=HTML --data chat_id="665043934" --data "text=Done with breakout" "https://api.telegram.org/bot1490716503:AAGIkAEHjnt9fEtU-BLJ2StfLphkWr8LUvI/sendMessage"

