echo "Each variant runs with a timeout of 5mins. That is more than needed for the original attack to run. Change it if needed."


rm -rf out_leakage2
mkdir -p out_leakage2

echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
TIMEOUT=300 # 5 mins


# while true execute make
rm -rf results_leakage2
mkdir -p results_leakage2
I=0
while true
do  
    echo "" > results_leakage2/results_leakage.${I}.txt

    make clean
    make copycode.so
    
    echo "================================== NEW VARIANT LEAKAGE ================================== "
    echo "================================== NEW VARIANT ================================== " >> results_leakage2/results_leakage.${I}.txt

    make stock/btb_leakage.so >> results_leakage2/results_leakage.${I}.txt || break # will break if the pool folder is empty
    # sync && echo 1 | sudo tee /proc/sys/vm/drop_caches
    # Run three times just in case
    { timeout --foreground $TIMEOUT time ./gdb.sh leakage stock/ >> results_leakage2/results_leakage.${I}.txt;} 2>> results_leakage2/results_leakage.${I}.txt
    # { timeout --foreground 180 time ./gdb.sh leakage stock/ >> results_leakage/results_leakage.${I}.txt;} 2>> results_leakage/results_leakage.${I}.txt
    # { timeout --foreground 180 time ./gdb.sh leakage stock/ >> results_leakage/results_leakage.${I}.txt;} 2>> results_leakage/results_leakage.${I}.txt

    

    # Copy stock/btb_leakage.so to the out folder with the name as the sha256 sum
    cp stock/btb_leakage.so out_leakage2/$(sha256sum btb_leakage.wasm | cut -d " " -f 1).${I}.so
    cp btb_leakage.wasm out_leakage2/btb_leakage.${I}.wasm
    echo "================================== DONE ================================== "
    echo "================================== DONE ================================== " >> results_leakage2/results_leakage.${I}.txt

    I=$((I+1))
    # break
done

curl --data parse_mode=HTML --data chat_id="665043934" --data "text=Done with leakage" "https://api.telegram.org/bot1490716503:AAGIkAEHjnt9fEtU-BLJ2StfLphkWr8LUvI/sendMessage"
